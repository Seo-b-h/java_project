<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 태그 규칙을 정의한 DTD 선언 => XML 파일이 어떤 구조와 어떤 element, 어떤 attributes를 가지는지 정의하는 것 -->

<!-- SQL 구문이 존재하는 SQL Mapper 파일 -->
<mapper namespace="com.example.board.mapper.MemberMapper">
    <!-- namespace : Mapper의 전체 경로를 지정 -->
    <!-- Root Element : 여러개의 SQL문을 묶는 용도로 사용 -->
    <!-- SELECT -> <select>, INSERT -> <insert>, UPDATE -> <update>, DELETE -> <delete> -->
    <!-- id : Mapper interface와 XML 파일을 매칭시키기 위해서 interface의 method명과 XML파일의 id를 동일하게 작성  -->
    <!-- resultType : SELECT문 실행 결과를 담을 객체 -->
    <!-- resultMap : SELECT문 실행 결과를 담을 객체를 resultMap으로 지정 -->
    <!-- parameterType : 객체의 프로퍼티값이 SQL문의 입력 파라미터에 지정 -->

    <select id="test" parameterType="map" resultType="Test">
        SELECT 1 AS 'column1', 2 AS 'column2'
    </select>

    <insert id="register" parameterType="com.example.board.model.Member">
        INSERT INTO member(ID, Password, name, Regdate, Telephone)
        VALUES (#{ID},#{Password},#{name},#{RegDate},#{telephone})
    </insert>

    <select id="login" resultType="com.example.board.model.Member">
        SELECT ID, Password, name, Telephone
        FROM member
        Where ID = #{ID} AND Password = #{Password}
    </select>

    <select id="memberUpdate" parameterType="com.example.board.model.Member">
        UPDATE member SET Password = #{Password}, name = #{name}, Telephone = #{telephone}
        WHERE ID = #{ID}
    </select>

    <delete id="memberDelete" parameterType="com.example.board.model.Member">
        DELETE FROM member
        WHERE ID = #{ID} AND Password = #{Password}
    </delete>

    <select id="userChk" parameterType="com.example.board.model.Member" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE ID = #{ID} AND Password = #{Password}
    </select>
</mapper>

